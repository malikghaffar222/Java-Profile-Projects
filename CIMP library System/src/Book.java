import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

public abstract class Book {
	// Global Variable
	public static final int HISTORY = 0; /* Provided code. Values indicating the kind of books (DO NOT DELETE) */
	public static final int NON_FICTION = 1; /* Provided code. Values indicating the kind of books (DO NOT DELETE) */
	public static final int NOVEL = 2; /* Provided code. Values indicating the kind of books (DO NOT DELETE) */
	private int bookId, numPages; // variable are protected because we will extend the Book class
	private String title = "", borrower = ""; // and we want these to be inherited
	private Date dueDate;

	// =============== Constructor =================
	/* Default constructor */
	public Book() {
	}

	/*
	 * The constructor that creates the book object
	 * 
	 * @param bookId - The book ID (Generated by the book counter) for the book
	 * 
	 * @param title - The title of the book
	 * 
	 * @param numPages - Number of pages that book has
	 */
	public Book(int bookId, String title, int numPages) {
		this.bookId = bookId;
		this.title = title;
		this.numPages = numPages;
	}

	// ============= Private Methods ===============
	/* May add your own private methods here */

	// ============= Public Methods ================
	/*
	 * Checks if the book is borrowed or not
	 * 
	 * @return - true if the book is borrowed false if the book is still available
	 */
	public boolean IsBorrowed() {
		if (borrower == null)
			return false;
		else
			return true;
	}

	/*
	 * Gets the title of the book
	 * 
	 * @return - the title of the book
	 */
	public String GetTitle() {
		return this.title;
	}

	/*
	 * Gets the number of pages the book has
	 * 
	 * @return - The number of pages the book has
	 */
	public int GetNumPages() {
		return this.numPages;
	}

	/*
	 * Gets the book ID
	 * 
	 * @return - The book ID
	 */
	public int GetBookId() {
		return this.bookId;
	}

	/*
	 * Gets the name of the borrower
	 * 
	 * @return - Returns the name of the borrower if someone did borrow - Returns
	 * null if no one borrowed it.
	 */
	public String GetBorrower() {
		return this.borrower;
	}

	/*
	 * Sets the name of the borrower for this book
	 * 
	 * @param borrowerName - The name of the borrower
	 */
	public void SetBorrower(String borrowerName) {
		this.borrower = borrowerName;
	}

	/* Specify that this book is returned back to the library */
	public void Return() {
		// set again the borrower & due date to null as this book is returned
		// and has no any borrower now.
		this.SetBorrower(null);
		this.SetDueDate(null);
	}

	public void setBookId(int bookId) {
		this.bookId = bookId;
	}

	/*
	 * Gets the due date for this book
	 * 
	 * @return - The Date String that contains the date that the book is due
	 */
	public String GetDueDate() {
		// getting due date string
		return this.getDueDateString();
	}

	/*
	 * Sets the due date for this book
	 * 
	 * @param date - The Date object that contains the due date
	 */
	public void SetDueDate(Date date) {
		this.dueDate = date;
	}

	/*
	 * Specify that the book is being borrowed
	 * 
	 * @param borrowerName - The borrower's name
	 */
	public abstract boolean Borrow(String borrowerName, int numDays);

	/*
	 * Gets the special info that is specific to the book type
	 * 
	 * @return - The special information
	 */
	public abstract String ExtraInfo();

	// a helper method to get Due date
	public String getDueDateString() {
		// defining the pattern of due date of this book
		DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		if (this.dueDate != null)
			return dateFormat.format(this.dueDate);
		else
			return "";
	}

	// a helper method to know that how many days this book can be borrowed
	public abstract int getMaxBorrowDays();

}