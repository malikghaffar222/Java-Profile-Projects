/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package denta_clinic_patient_filingsystem;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class MainFrame extends javax.swing.JFrame {

    List<PatientModelClass> patientsList;
    List<VisitsModel> visitsList;
    DefaultTableModel patientTableModel;
    DefaultTableModel visitTableModel;

    int fileNoDefault = 1;
    int index = 0;

    public MainFrame() {
        initComponents();
        patientTab_fileNumber.setText("" + fileNoDefault);
        visitTab_fileNo.setText("" + fileNoDefault);
        patientsList = new ArrayList<>();
        visitsList = new ArrayList<>();
        patientTableModel = (DefaultTableModel) patientTab_table.getModel();
        visitTableModel = (DefaultTableModel) visitTab_table.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        patient_nameField = new javax.swing.JTextField();
        patientTab_malePatient = new javax.swing.JRadioButton();
        patientTab_femalePatient = new javax.swing.JRadioButton();
        patientTab_PhoneNum = new javax.swing.JTextField();
        patientTab_patientEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        patientTab_dateCombobox = new javax.swing.JComboBox<>();
        patientTab_monthCombobox = new javax.swing.JComboBox<>();
        patientTab_yearCombobox = new javax.swing.JComboBox<>();
        patientTab_companyCombobox = new javax.swing.JComboBox<>();
        patientTab_idNumber = new javax.swing.JTextField();
        patientTab_nationality = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        patientTab_fileNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTab_table = new javax.swing.JTable();
        patientTab_addPatientBtn = new javax.swing.JButton();
        patientTab_deletePatientBtn = new javax.swing.JButton();
        patientTab_editPatientBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        patientTab_searchField = new javax.swing.JTextField();
        patientTab_searchBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        visitTab_patientName = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        visitTab_fileNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        visitTab_visitDate = new javax.swing.JComboBox<>();
        visitTab_visitMonth = new javax.swing.JComboBox<>();
        visitTab_visitYear = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        visitTab_generalExam100 = new javax.swing.JCheckBox();
        xRay150 = new javax.swing.JCheckBox();
        visitTab_compositeFilling250 = new javax.swing.JCheckBox();
        visitTab_whitening1200 = new javax.swing.JCheckBox();
        visitTab_rootCanal600 = new javax.swing.JCheckBox();
        visitTab_extraction250 = new javax.swing.JCheckBox();
        visitTab_porcelain1000 = new javax.swing.JCheckBox();
        visitTab_removalBraces500 = new javax.swing.JCheckBox();
        visitTab_dentalImplant2000 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        visitTab_table = new javax.swing.JTable();
        visitTab_addVisit = new javax.swing.JButton();
        visitTab_editVisit = new javax.swing.JButton();
        visitTab_deleteVisit = new javax.swing.JButton();
        visitTab_saveToFile = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        reports_dateFrom = new javax.swing.JComboBox<>();
        reports_dateTo = new javax.swing.JComboBox<>();
        reports_yearFrom = new javax.swing.JComboBox<>();
        reports_yearTo = new javax.swing.JComboBox<>();
        reports_displayRevenu = new javax.swing.JCheckBox();
        reports_displayAllTreatment = new javax.swing.JCheckBox();
        reportsSaveFile = new javax.swing.JButton();
        reportsSaveAllPatients = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Phone No");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Gender");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Email Address");

        buttonGroup1.add(patientTab_malePatient);
        patientTab_malePatient.setText("Male");

        buttonGroup1.add(patientTab_femalePatient);
        patientTab_femalePatient.setText("Female");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Date of Birth");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Insurance");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("ID Number");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Nationality");

        patientTab_dateCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        patientTab_monthCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        patientTab_yearCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));

        patientTab_companyCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAMANA - Saudi Arabian", "Chubb Arabia Cooperative Insurance", "Arabia Insurance Cooperative", "Saudi Arabian Insurance" }));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("File No");

        patientTab_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "File No", "Age", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTab_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientTab_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patientTab_table);
        if (patientTab_table.getColumnModel().getColumnCount() > 0) {
            patientTab_table.getColumnModel().getColumn(0).setResizable(false);
            patientTab_table.getColumnModel().getColumn(1).setResizable(false);
            patientTab_table.getColumnModel().getColumn(2).setResizable(false);
            patientTab_table.getColumnModel().getColumn(3).setResizable(false);
        }

        patientTab_addPatientBtn.setText("Add Patient");
        patientTab_addPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTab_addPatientBtnActionPerformed(evt);
            }
        });

        patientTab_deletePatientBtn.setText("Delete");
        patientTab_deletePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTab_deletePatientBtnActionPerformed(evt);
            }
        });

        patientTab_editPatientBtn.setText("Edit Patient");
        patientTab_editPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTab_editPatientBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Search/Phone");

        patientTab_searchBtn.setText("Find Patient");
        patientTab_searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientTab_searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(214, 214, 214)
                .addComponent(patientTab_addPatientBtn)
                .addGap(18, 18, 18)
                .addComponent(patientTab_editPatientBtn)
                .addGap(18, 18, 18)
                .addComponent(patientTab_deletePatientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(patientTab_fileNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                .addGap(552, 552, 552))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(patientTab_malePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(patientTab_femalePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(patient_nameField)
                                    .addComponent(patientTab_PhoneNum)
                                    .addComponent(patientTab_patientEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                                .addGap(90, 90, 90)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(patientTab_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(patientTab_dateCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(patientTab_monthCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(patientTab_yearCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(patientTab_companyCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(patientTab_idNumber)))))
                                .addGap(122, 122, 122))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(patientTab_searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(patientTab_searchBtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_dateCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_monthCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_yearCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_companyCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_idNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_nationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patient_nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_malePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_femalePatient))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_PhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientTab_patientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientTab_fileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientTab_deletePatientBtn)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(patientTab_addPatientBtn)
                        .addComponent(patientTab_editPatientBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientTab_searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientTab_searchBtn))
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("Patient", jPanel2);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Patient Name");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("File No");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Visit Date");

        visitTab_visitDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" }));

        visitTab_visitMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        visitTab_visitYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));
        visitTab_visitYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitTab_visitYearActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Treatment Procedures");

        visitTab_generalExam100.setText("General Examination [100 aed]");

        xRay150.setText("X-Ray [150 aed]");

        visitTab_compositeFilling250.setText("Composite Filling [250 aed]");

        visitTab_whitening1200.setText("Whitening [1200 aed]");

        visitTab_rootCanal600.setText("Root Canal [600 aed]");

        visitTab_extraction250.setText("Extraction [250 aed]");

        visitTab_porcelain1000.setText("Porcelain Crown [1000 aed]");

        visitTab_removalBraces500.setText("Removal Braces [500 aed]");

        visitTab_dentalImplant2000.setText("Dental Implant [2000 aed]");

        visitTab_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Visit Date", "Procedure", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        visitTab_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                visitTab_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(visitTab_table);

        visitTab_addVisit.setText("Add Visit");
        visitTab_addVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitTab_addVisitActionPerformed(evt);
            }
        });

        visitTab_editVisit.setText("Edit Visit");
        visitTab_editVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitTab_editVisitActionPerformed(evt);
            }
        });

        visitTab_deleteVisit.setText("Delete Visit");
        visitTab_deleteVisit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitTab_deleteVisitActionPerformed(evt);
            }
        });

        visitTab_saveToFile.setText("Save to file");
        visitTab_saveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitTab_saveToFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visitTab_fileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(visitTab_patientName, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(visitTab_dentalImplant2000)
                                    .addComponent(visitTab_removalBraces500)
                                    .addComponent(visitTab_porcelain1000)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(visitTab_visitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(visitTab_visitMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(visitTab_visitYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visitTab_compositeFilling250)
                            .addComponent(xRay150)
                            .addComponent(visitTab_generalExam100))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visitTab_whitening1200)
                            .addComponent(visitTab_extraction250)
                            .addComponent(visitTab_rootCanal600)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(196, 196, 196)
                            .addComponent(visitTab_addVisit)
                            .addGap(18, 18, 18)
                            .addComponent(visitTab_editVisit)
                            .addGap(18, 18, 18)
                            .addComponent(visitTab_deleteVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(visitTab_saveToFile, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitTab_patientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitTab_visitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitTab_visitMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitTab_visitYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(visitTab_fileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(visitTab_generalExam100)
                        .addGap(18, 18, 18)
                        .addComponent(xRay150)
                        .addGap(18, 18, 18)
                        .addComponent(visitTab_compositeFilling250))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(visitTab_rootCanal600)
                        .addGap(18, 18, 18)
                        .addComponent(visitTab_extraction250)
                        .addGap(18, 18, 18)
                        .addComponent(visitTab_whitening1200))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(visitTab_porcelain1000)
                        .addGap(18, 18, 18)
                        .addComponent(visitTab_removalBraces500)
                        .addGap(18, 18, 18)
                        .addComponent(visitTab_dentalImplant2000)))
                .addGap(55, 55, 55)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(visitTab_deleteVisit)
                        .addComponent(visitTab_saveToFile))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(visitTab_addVisit)
                        .addComponent(visitTab_editVisit)))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Visits", jPanel3);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Visit Date/From");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Visit Date/To");

        reports_dateFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        reports_dateTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        reports_yearFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));

        reports_yearTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021" }));

        reports_displayRevenu.setText("Display Revenue");

        reports_displayAllTreatment.setText("Display all treatments");

        reportsSaveFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reportsSaveFile.setText("Save to File");
        reportsSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsSaveFileActionPerformed(evt);
            }
        });

        reportsSaveAllPatients.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reportsSaveAllPatients.setText("Save all patients");
        reportsSaveAllPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsSaveAllPatientsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reports_dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reports_dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reports_yearTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reports_yearFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(reports_displayRevenu)
                        .addGap(18, 18, 18)
                        .addComponent(reports_displayAllTreatment)
                        .addGap(69, 69, 69)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(reportsSaveAllPatients, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reportsSaveFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(236, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(reports_dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(reports_dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(reports_yearFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(reports_yearTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(46, 46, 46)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reports_displayRevenu)
                    .addComponent(reports_displayAllTreatment)
                    .addComponent(reportsSaveFile))
                .addGap(27, 27, 27)
                .addComponent(reportsSaveAllPatients)
                .addContainerGap(382, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reports", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void patientTab_addPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTab_addPatientBtnActionPerformed
        // TODO add your handling code here:
        String name = patient_nameField.getText().toString();
        String gender = "";
        String phoneNumber = patientTab_PhoneNum.getText().toString();
        String email = patientTab_patientEmail.getText().toString();
        String date = patientTab_dateCombobox.getSelectedItem().toString() + "-" + (patientTab_monthCombobox.getSelectedIndex() + 1) + "-" + patientTab_yearCombobox.getSelectedItem().toString();
        String insuranceCompany = patientTab_companyCombobox.getSelectedItem().toString();
        String id = patientTab_idNumber.getText().toString();
        String nationality = patientTab_nationality.getText().toString();
        String fileNo = patientTab_fileNumber.getText().toString();

        if (patientTab_malePatient.isSelected()) {
            gender = patientTab_malePatient.getText().toString();
        } else if (patientTab_femalePatient.isSelected()) {
            gender = patientTab_femalePatient.getText().toString();
        }

        if (name.isEmpty() && gender.isEmpty() && phoneNumber.isEmpty() && email.isEmpty() && date.isEmpty() && insuranceCompany.isEmpty() && id.isEmpty() && nationality.isEmpty()
                && fileNo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Empty Data, Sharam Kar Habibi");
        } else if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Name must be entered !");
        } else if (gender.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Gender must be selected !");
        } else if (phoneNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Phone number must be entered !");
        } else if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email must be entered !");
        } else if (date.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Date must be entered !");
        } else if (insuranceCompany.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Company must be entered !");
        } else if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID must be entered !");
        } else if (nationality.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nationality must be entered !");
        } else if (fileNo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Empty File No not acceptable !");
        } else {
            try {
                String age = getAge(date);
                PatientModelClass patient = new PatientModelClass(name, gender, phoneNumber, email, date, insuranceCompany, id, nationality, Integer.parseInt(fileNo));
                patientsList.add(patient);
                String[] data = {name, fileNo, age, phoneNumber};
                patientTableModel.addRow(data);
            } catch (ParseException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        fileNoDefault++;
        patientTab_fileNumber.setText("" + fileNoDefault);
        patient_nameField.setText("");
        patientTab_PhoneNum.setText("");
        patientTab_patientEmail.setText("");
        patientTab_dateCombobox.setSelectedIndex(0);
        patientTab_monthCombobox.setSelectedIndex(0);
        patientTab_yearCombobox.setSelectedIndex(0);
        patientTab_companyCombobox.setSelectedIndex(0);
        patientTab_idNumber.setText("");
        patientTab_nationality.setText("");

    }//GEN-LAST:event_patientTab_addPatientBtnActionPerformed

    private void patientTab_editPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTab_editPatientBtnActionPerformed
        // TODO add your handling code here:
        String name = patient_nameField.getText().toString();
        String gender = "";
        String phoneNumber = patientTab_PhoneNum.getText().toString();
        String email = patientTab_patientEmail.getText().toString();
        String date = patientTab_dateCombobox.getSelectedItem().toString() + "-" + (patientTab_monthCombobox.getSelectedIndex() + 1) + "-" + patientTab_yearCombobox.getSelectedItem().toString();
        String insuranceCompany = patientTab_companyCombobox.getSelectedItem().toString();
        String id = patientTab_idNumber.getText().toString();
        String nationality = patientTab_nationality.getText().toString();
        String fileNo = patientTab_fileNumber.getText().toString();

        if (patientTab_malePatient.isSelected()) {
            gender = patientTab_malePatient.getText().toString();
        } else if (patientTab_femalePatient.isSelected()) {
            gender = patientTab_femalePatient.getText().toString();
        }

        try {
            String age = getAge(date);
            PatientModelClass patient = new PatientModelClass(name, gender, phoneNumber, email, date, insuranceCompany, id, nationality, Integer.parseInt(fileNo));
            patientsList.set(index, patient);
            patientTableModel.setRowCount(0);
            populateJTable(patientsList);
        } catch (ParseException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_patientTab_editPatientBtnActionPerformed

    private void patientTab_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientTab_tableMouseClicked
        // TODO add your handling code here:
        String selecteRowVal = patientTableModel.getValueAt(patientTab_table.getSelectedRow(), 1).toString();

        int file = Integer.parseInt(selecteRowVal);
        System.out.println(file);
        for (int i = 0; i <= patientsList.size(); i++) {
            if (patientsList.get(i).getFileNo() == file) {
                index = i;
                PatientModelClass model = patientsList.get(i);
                patient_nameField.setText(model.getName());
                patientTab_PhoneNum.setText(model.getPhone());
                patientTab_patientEmail.setText(model.getEmail());

                String str = model.getDateOfBirth();
                String[] arrOfStr = str.split("-", 3);
                patientTab_dateCombobox.setSelectedItem(arrOfStr[0]);
                patientTab_monthCombobox.setSelectedItem(arrOfStr[1]);
                patientTab_yearCombobox.setSelectedItem(arrOfStr[2]);

                patientTab_companyCombobox.setSelectedItem(model.getInsuranceCompany());
                patientTab_idNumber.setText(model.getIdNumber());
                patientTab_nationality.setText(model.getNationality());
                patientTab_fileNumber.setText("" + file);
                break;
            }
        }
    }//GEN-LAST:event_patientTab_tableMouseClicked

    private void patientTab_deletePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTab_deletePatientBtnActionPerformed
        // TODO add your handling code here:
        String selecteRowVal = patientTableModel.getValueAt(patientTab_table.getSelectedRow(), 1).toString();

        int file = Integer.parseInt(selecteRowVal);
        for (int i = 0; i <= patientsList.size(); i++) {
            if (patientsList.get(i).getFileNo() == file) {
                index = i;
                patientsList.remove(i);
                patientTableModel.setRowCount(0);
                try {
                    populateJTable(patientsList);
                } catch (ParseException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            }
        }
        patientTab_fileNumber.setText("" + fileNoDefault);
        patient_nameField.setText("");
        patientTab_PhoneNum.setText("");
        patientTab_patientEmail.setText("");
        patientTab_dateCombobox.setSelectedIndex(0);
        patientTab_monthCombobox.setSelectedIndex(0);
        patientTab_yearCombobox.setSelectedIndex(0);
        patientTab_companyCombobox.setSelectedIndex(0);
        patientTab_idNumber.setText("");
        patientTab_nationality.setText("");
    }//GEN-LAST:event_patientTab_deletePatientBtnActionPerformed

    private void patientTab_searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientTab_searchBtnActionPerformed
        // TODO add your handling code here:
        String phoneNum = patientTab_searchField.getText().toString();
        if (phoneNum.equals("")) {
            JOptionPane.showMessageDialog(this, "First Enter Number !");
            return;
        } else {
//            System.out.println("Size: " + patientsList.size());
            for (int i = 0; i <= patientsList.size(); i++) {
                if (patientsList.get(i).getPhone().equals(phoneNum)) {
                    PatientModelClass model = patientsList.get(i);
                    patient_nameField.setText(model.getName());
                    patientTab_PhoneNum.setText(model.getPhone());
                    patientTab_patientEmail.setText(model.getEmail());

                    String str = model.getDateOfBirth();
                    String[] arrOfStr = str.split("-", 3);
                    patientTab_dateCombobox.setSelectedItem(arrOfStr[0]);
                    patientTab_monthCombobox.setSelectedItem(arrOfStr[1]);
                    patientTab_yearCombobox.setSelectedItem(arrOfStr[2]);

                    patientTab_companyCombobox.setSelectedItem(model.getInsuranceCompany());
                    patientTab_idNumber.setText(model.getIdNumber());
                    patientTab_nationality.setText(model.getNationality());
                    break;
                }
                
            }
        }
    }//GEN-LAST:event_patientTab_searchBtnActionPerformed

    private void visitTab_visitYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitTab_visitYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitTab_visitYearActionPerformed

    private void visitTab_addVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitTab_addVisitActionPerformed
        // TODO add your handling code here:
        String patientName = visitTab_patientName.getText().toString();
        int file = Integer.parseInt(visitTab_fileNo.getText().toString());
        String date = visitTab_visitDate.getSelectedItem() + "/" + (visitTab_visitMonth.getSelectedIndex() + 1) + "/" + visitTab_visitYear.getSelectedItem().toString();
        Object[] values = getTreatmentProcedure();
        String procedure = (String) values[0];
        int price = (Integer) values[1];

        VisitsModel visit = new VisitsModel(patientName, date, file, procedure, price);
        visitsList.add(visit);

        String[] data = {date, procedure, String.valueOf(price)};
        visitTableModel.addRow(data);
        fileNoDefault++;

        visitTab_patientName.setText("");
        visitTab_visitDate.setSelectedIndex(0);
        visitTab_visitMonth.setSelectedIndex(0);
        visitTab_visitYear.setSelectedIndex(0);

        visitTab_fileNo.setText("" + fileNoDefault);

    }//GEN-LAST:event_visitTab_addVisitActionPerformed

    private void visitTab_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visitTab_tableMouseClicked
        // TODO add your handling code here:
        String visitDate = visitTab_table.getValueAt(visitTab_table.getSelectedRow(), 0).toString();
        for (int i = 0; i < visitsList.size(); i++) {
            if (visitsList.get(i).getDate().equals(visitDate)) {
                index = i;
                VisitsModel model = visitsList.get(i);
                visitTab_patientName.setText(model.getPatientName());
                visitTab_fileNo.setText("" + model.getFile());

                String date[] = model.getDate().split("/");

                visitTab_visitDate.setSelectedItem(date[0]);
                visitTab_visitMonth.setSelectedItem(date[1]);
                visitTab_visitYear.setSelectedItem(date[2]);

            }
        }
    }//GEN-LAST:event_visitTab_tableMouseClicked

    private void visitTab_editVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitTab_editVisitActionPerformed
        // TODO add your handling code here:
        String patientName = visitTab_patientName.getText().toString();
        int file = Integer.parseInt(visitTab_fileNo.getText().toString());
        String date = visitTab_visitDate.getSelectedItem() + "/" + (visitTab_visitMonth.getSelectedIndex() + 1) + "/" + visitTab_visitYear.getSelectedItem().toString();
        Object[] values = getTreatmentProcedure();
        String procedure = (String) values[0];
        int price = (Integer) values[1];

        VisitsModel visit = new VisitsModel(patientName, date, file, procedure, price);
        visitsList.set(index, visit);
        visitTableModel.setRowCount(0);
        populateVisitingTable();

        visitTab_patientName.setText("");
        visitTab_visitDate.setSelectedIndex(0);
        visitTab_visitMonth.setSelectedIndex(0);
        visitTab_visitYear.setSelectedIndex(0);

        visitTab_fileNo.setText("" + fileNoDefault);

    }//GEN-LAST:event_visitTab_editVisitActionPerformed

    private void visitTab_deleteVisitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitTab_deleteVisitActionPerformed
        // TODO add your handling code here:
        String selectedDate = visitTableModel.getValueAt(visitTab_table.getSelectedRow(), 0).toString();

        for (int i = 0; i <= visitsList.size(); i++) {
            if (visitsList.get(i).getDate() == selectedDate) {
                index = i;
                visitsList.remove(i);
                visitTableModel.setRowCount(0);
                populateVisitingTable();
                break;
            }
        }

        visitTab_patientName.setText("");
        visitTab_visitDate.setSelectedIndex(0);
        visitTab_visitMonth.setSelectedIndex(0);
        visitTab_visitYear.setSelectedIndex(0);

        visitTab_fileNo.setText("" + fileNoDefault);
    }//GEN-LAST:event_visitTab_deleteVisitActionPerformed

    private void visitTab_saveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitTab_saveToFileActionPerformed
        // TODO add your handling code here:
        try {
            FileOutputStream outputStream = new FileOutputStream(new File("visitedPatient.txt"));

            String patientName = visitTab_patientName.getText().toString();
            int file = Integer.parseInt(visitTab_fileNo.getText().toString());
            String date = visitTab_visitDate.getSelectedItem() + "/" + (visitTab_visitMonth.getSelectedIndex() + 1) + "/" + visitTab_visitYear.getSelectedItem().toString();
            Object[] values = getTreatmentProcedure();
            String procedure = (String) values[0];
            int price = (Integer) values[1];

            VisitsModel visit = new VisitsModel(patientName, date, file, procedure, price);
            byte[] strToBytes = visit.toString().getBytes();
            outputStream.write(strToBytes);
        } catch (Exception e) {
            System.out.println("Exception in writing visited record to file ");
        }
    }//GEN-LAST:event_visitTab_saveToFileActionPerformed

    private void reportsSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsSaveFileActionPerformed
        // TODO add your handling code here:
        String record = "";
        String dateFrom = (reports_dateFrom.getSelectedIndex() + 1) + "/" + reports_yearFrom.getSelectedItem().toString();
        String dateTo = (reports_dateTo.getSelectedIndex() + 1) + "/" + reports_yearTo.getSelectedItem().toString();
        String text = "";
        try {
            FileOutputStream outputStream = new FileOutputStream(new File("patientReports.txt"));

            if (reports_displayRevenu.isSelected() && reports_displayAllTreatment.isSelected()) {
                for (int i = 0; i < visitsList.size(); i++) {
                    if (dateFrom.equals(visitsList.get(i).getDate().substring(3)) || dateTo.equals(visitsList.get(i).getDate().substring(3))) {
                        VisitsModel model = visitsList.get(i);
                        text += model.getTreatmentPrice() + " -> " + model.getTreatmentProcedure() + "\n";
                    }
                }
                outputStream.write(text.getBytes());
                return;
            } else if (reports_displayRevenu.isSelected()) {
                text = "";
                for (int i = 0; i < visitsList.size(); i++) {
                    if (dateFrom.equals(visitsList.get(i).getDate().substring(3)) || dateTo.equals(visitsList.get(i).getDate().substring(3))) {
                        VisitsModel model = visitsList.get(i);
                        text += model.getTreatmentPrice() + "\n";
                    }
                }
                outputStream.write(text.getBytes());
                return;
            } else if (reports_displayAllTreatment.isSelected()) {
                text = "";
                for (int i = 0; i < visitsList.size(); i++) {
                    if (dateFrom.equals(visitsList.get(i).getDate().substring(3)) || dateTo.equals(visitsList.get(i).getDate().substring(3))) {
                        VisitsModel model = visitsList.get(i);
                        text += model.getTreatmentProcedure() + "\n"; 
                    }
                }
                outputStream.write(text.getBytes());
                return;
            }
        } catch (IOException e) {
            System.out.println("Exception in writing to file !");
        }


    }//GEN-LAST:event_reportsSaveFileActionPerformed

    private void reportsSaveAllPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsSaveAllPatientsActionPerformed
        // TODO add your handling code here:
        String dateFrom = (reports_dateFrom.getSelectedIndex() + 1) + "/" + reports_yearFrom.getSelectedItem().toString();
        String dateTo = (reports_dateTo.getSelectedIndex() + 1) + "/" + reports_yearTo.getSelectedItem().toString();
        try {
             FileOutputStream outputStream = new FileOutputStream(new File("all-patients.txt"));
             String text = "";
            for (int i = 0; i < visitsList.size(); i++) {
                VisitsModel model = visitsList.get(i);
                text += model.toString()+"\n";
            }
            outputStream.write(text.getBytes());
        } catch (IOException e) {
            System.out.println("Exception in writing to file !");
        }
    }//GEN-LAST:event_reportsSaveAllPatientsActionPerformed

    private void populateVisitingTable() {
        for (int i = 0; i < visitsList.size(); i++) {
            String date = visitsList.get(i).getDate();
            String procedure = visitsList.get(i).getTreatmentProcedure();
            int price = visitsList.get(i).getTreatmentPrice();

            String[] data = {date, procedure, String.valueOf(price)};
            visitTableModel.addRow(data);
        }
    }

    private Object[] getTreatmentProcedure() {
        String procedure = "";
        int totalPrice = 0;
        if (visitTab_generalExam100.isSelected()) {
            procedure += "General Examination, ";
            totalPrice += 100;
        }

        if (xRay150.isSelected()) {
            procedure += ", X-Ray";
            totalPrice += 150;
        }

        if (visitTab_compositeFilling250.isSelected()) {
            procedure += "Composite Filling, ";
            totalPrice += 250;
        }

        if (visitTab_rootCanal600.isSelected()) {
            procedure += "Root Canal, ";
            totalPrice += 600;
        }

        if (visitTab_extraction250.isSelected()) {
            procedure += "Extraction, ";
            totalPrice += 250;
        }

        if (visitTab_whitening1200.isSelected()) {
            procedure += "Whitening, ";
            totalPrice += 1200;
        }

        if (visitTab_porcelain1000.isSelected()) {
            procedure += "Porcelain Crown, ";
            totalPrice += 1000;
        }

        if (visitTab_removalBraces500.isSelected()) {
            procedure += "Removal Braces, ";
            totalPrice += 500;
        }

        if (visitTab_dentalImplant2000.isSelected()) {
            procedure += "Dental Implant, ";
            totalPrice += 2000;
        }

        Object[] values = {procedure, totalPrice};

        return values;
    }

    private void populateJTable(List<PatientModelClass> patientsList) throws ParseException {
        for (int i = 0; i < patientsList.size(); i++) {
            String name = patientsList.get(i).getName();
            int fileNo = patientsList.get(i).getFileNo();
            String date = patientsList.get(i).getDateOfBirth();
            String phoneNumber = patientsList.get(i).getPhone();
            String[] data = {patientsList.get(i).getName(), String.valueOf(fileNo), getAge(date), phoneNumber};
            patientTableModel.addRow(data);
        }

    }

    private String getAge(String date) throws ParseException {
        SimpleDateFormat dateFormatter = new SimpleDateFormat("dd-MM-yyyy");
        Date dob = dateFormatter.parse(date);
        Instant instant = dob.toInstant();
        ZonedDateTime zone = instant.atZone(ZoneId.systemDefault());
        LocalDate givenDate = zone.toLocalDate();
        //Calculating the difference between given date to current date.
        Period period = Period.between(givenDate, LocalDate.now());
        String age = period.getYears() + "." + period.getMonths() + " years";
        return age;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField patientTab_PhoneNum;
    private javax.swing.JButton patientTab_addPatientBtn;
    private javax.swing.JComboBox<String> patientTab_companyCombobox;
    private javax.swing.JComboBox<String> patientTab_dateCombobox;
    private javax.swing.JButton patientTab_deletePatientBtn;
    private javax.swing.JButton patientTab_editPatientBtn;
    private javax.swing.JRadioButton patientTab_femalePatient;
    private javax.swing.JTextField patientTab_fileNumber;
    private javax.swing.JTextField patientTab_idNumber;
    private javax.swing.JRadioButton patientTab_malePatient;
    private javax.swing.JComboBox<String> patientTab_monthCombobox;
    private javax.swing.JTextField patientTab_nationality;
    private javax.swing.JTextField patientTab_patientEmail;
    private javax.swing.JButton patientTab_searchBtn;
    private javax.swing.JTextField patientTab_searchField;
    private javax.swing.JTable patientTab_table;
    private javax.swing.JComboBox<String> patientTab_yearCombobox;
    private javax.swing.JTextField patient_nameField;
    private javax.swing.JButton reportsSaveAllPatients;
    private javax.swing.JButton reportsSaveFile;
    private javax.swing.JComboBox<String> reports_dateFrom;
    private javax.swing.JComboBox<String> reports_dateTo;
    private javax.swing.JCheckBox reports_displayAllTreatment;
    private javax.swing.JCheckBox reports_displayRevenu;
    private javax.swing.JComboBox<String> reports_yearFrom;
    private javax.swing.JComboBox<String> reports_yearTo;
    private javax.swing.JButton visitTab_addVisit;
    private javax.swing.JCheckBox visitTab_compositeFilling250;
    private javax.swing.JButton visitTab_deleteVisit;
    private javax.swing.JCheckBox visitTab_dentalImplant2000;
    private javax.swing.JButton visitTab_editVisit;
    private javax.swing.JCheckBox visitTab_extraction250;
    private javax.swing.JTextField visitTab_fileNo;
    private javax.swing.JCheckBox visitTab_generalExam100;
    private javax.swing.JTextField visitTab_patientName;
    private javax.swing.JCheckBox visitTab_porcelain1000;
    private javax.swing.JCheckBox visitTab_removalBraces500;
    private javax.swing.JCheckBox visitTab_rootCanal600;
    private javax.swing.JButton visitTab_saveToFile;
    private javax.swing.JTable visitTab_table;
    private javax.swing.JComboBox<String> visitTab_visitDate;
    private javax.swing.JComboBox<String> visitTab_visitMonth;
    private javax.swing.JComboBox<String> visitTab_visitYear;
    private javax.swing.JCheckBox visitTab_whitening1200;
    private javax.swing.JCheckBox xRay150;
    // End of variables declaration//GEN-END:variables

}
